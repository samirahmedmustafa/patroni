---
# tasks file for roles/etcd
- name: deploy etcd runtime
  block:
    - name: extract compressed apps into /product/[app_dir]
      ansible.builtin.unarchive:
        src: "http://{{ ansible_ip }}/download/{{ apps.etcd.compressed }}"
        dest: "/tmp/"
        remote_src: yes

    - name: create extra dir
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ servers[group_names[0]]['sys_users'][0].user.name }}"
        group: "{{ servers[group_names[0]]['sys_users'][0].user.groups }}"
        state: directory
      loop: "{{ extra_dirs }}"

    - name: Download CA cert
      ansible.builtin.get_url:
        url: "http://{{ ansible_ip }}/download/{{ certs.ca.src }}"
        dest: "{{ certs.ca.dest }}"
        mode: 0644
        owner: etcd
        group: etcd

    - name: Download key
      ansible.builtin.get_url:
        url: "http://{{ ansible_ip }}/download/{{ certs.key.src }}"
        dest: "{{ certs.key.dest }}"
        mode: 0600
        owner: etcd
        group: etcd

    - name: Download cert
      ansible.builtin.get_url:
        url: "http://{{ ansible_ip }}/download/{{ certs.crt.src }}"
        dest: "{{ certs.crt.dest }}"
        mode: 0644
        owner: etcd
        group: etcd

    - name: copy the etcd binaries in the remote machines
      ansible.builtin.copy:
        src: "/tmp/{{ apps.etcd.version }}/{{ item }}"
        dest: "/usr/bin/"
        mode: 0655
        remote_src: yes
      loop:
        - etcdutl
        - etcdctl
        - etcd

    - name: write etcd jinj2 templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop: "{{ templates }}"

